// Copyright 2022 Lekko Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts,import_extension=none"
// @generated from file lekko/backend/v1beta1/distribution_service.proto (package lekko.backend.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  DeregisterClientRequest,
  DeregisterClientResponse,
  GetDeveloperAccessTokenRequest,
  GetDeveloperAccessTokenResponse,
  GetRepositoryContentsRequest,
  GetRepositoryContentsResponse,
  GetRepositoryVersionRequest,
  GetRepositoryVersionResponse,
  RegisterClientRequest,
  RegisterClientResponse,
  SendFlagEvaluationMetricsRequest,
  SendFlagEvaluationMetricsResponse,
} from "./distribution_service_pb"
import { MethodKind } from "@bufbuild/protobuf"

/**
 * Initial implementation of a config distribution service. Clients should begin by
 * calling the register RPC which returns a session key, which is used in all other RPCs.
 *
 * @generated from service lekko.backend.v1beta1.DistributionService
 */
export const DistributionService = {
  typeName: "lekko.backend.v1beta1.DistributionService",
  methods: {
    /**
     * Returns the latest commit sha of the repository. The client is expected to poll this
     * rpc to become aware of updates.
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.GetRepositoryVersion
     */
    getRepositoryVersion: {
      name: "GetRepositoryVersion",
      I: GetRepositoryVersionRequest,
      O: GetRepositoryVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the entire state of the repository, including all feature flags.
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.GetRepositoryContents
     */
    getRepositoryContents: {
      name: "GetRepositoryContents",
      I: GetRepositoryContentsRequest,
      O: GetRepositoryContentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sends metrics to the backend related to flag evaluation. This rpc can be used
     * to batch metrics to lekko servers.
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.SendFlagEvaluationMetrics
     */
    sendFlagEvaluationMetrics: {
      name: "SendFlagEvaluationMetrics",
      I: SendFlagEvaluationMetricsRequest,
      O: SendFlagEvaluationMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Registers a client and returns a session key.
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.RegisterClient
     */
    registerClient: {
      name: "RegisterClient",
      I: RegisterClientRequest,
      O: RegisterClientResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deregisters a client using a session key.
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.DeregisterClient
     */
    deregisterClient: {
      name: "DeregisterClient",
      I: DeregisterClientRequest,
      O: DeregisterClientResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns a github access token that provides access to the contents of
     * some of Lekko's private repositories
     *
     * @generated from rpc lekko.backend.v1beta1.DistributionService.GetDeveloperAccessToken
     */
    getDeveloperAccessToken: {
      name: "GetDeveloperAccessToken",
      I: GetDeveloperAccessTokenRequest,
      O: GetDeveloperAccessTokenResponse,
      kind: MethodKind.Unary,
    },
  },
} as const
